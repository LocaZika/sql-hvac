CREATE TABLE products (
    ID INT GENERATED ALWAYS AS IDENTITY,
    NAME VARCHAR(50) NOT NULL,
    BRAND VARCHAR(15) NOT NULL,
    PRICE NUMERIC(10,2) NOT NULL,
	CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_PRODUCT_CARS_ID PRIMARY KEY (ID, BRAND)
) PARTITION BY LIST(BRAND);

CREATE TABLE B1 PARTITION OF products FOR VALUES IN ('b1');
CREATE TABLE B2 PARTITION OF products FOR VALUES IN ('b2');
CREATE TABLE other_brands PARTITION OF products default;

insert into products(name, brand, price) values ('p1', 'b1', 120), ('p2', 'b2', 120), ('p3', 'b3', 120), ('p4', 'b2', 120);

UPDATE PRODUCTS SET PRICE = 150 WHERE ID = 3;

SELECT * FROM PRODUCTS;

CREATE FUNCTION SET_TIME()
RETURNS TRIGGER AS $$
BEGIN
	NEW.UPDATED_AT = CURRENT_TIMESTAMP;
	RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER SET_TIME_UPDATE_TRIGGER
BEFORE UPDATE ON PRODUCTS
FOR EACH ROW EXECUTE PROCEDURE SET_TIME();

CREATE TABLE imgs (
    ID SMALLINT GENERATED ALWAYS AS IDENTITY,
    PRODUCT_ID INT NOT NULL,
    PATH TEXT NOT NULL,
	CREATED_AT TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
	UPDATED_AT TIMESTAMPTZ NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT PK_PRODUCT_CAR_IMG PRIMARY KEY(ID, CREATED_AT)
) PARTITION BY RANGE (CREATED_AT);

CREATE TABLE P_2023 PARTITION OF IMGS FOR VALUES FROM ('01-01-2023') TO ('31-12-2023');
CREATE TABLE P_2024 PARTITION OF IMGS FOR VALUES FROM ('01-01-2024') TO ('31-12-2024');
CREATE TABLE other_YEAR PARTITION OF IMGS default;


insert into imgs(product_id, path) values (1, 'path/1'), (1, 'path/2'), (1, 'path/3'), (1, 'path/4');



