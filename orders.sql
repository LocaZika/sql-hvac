CREATE TABLE CUSTOMER.ORDERS(
	ID SMALLINT GENERATED ALWAYS AS IDENTITY,
	CUSTOMER_ID INT NOT NULL,
	PRODUCT_ID SMALLINT NOT NULL,
	QUANTITY SMALLINT NOT NULL DEFAULT 1,
	PAID INT NOT NULL,
	SALE_OFF SMALLINT NOT NULL DEFAULT 0,
	CREATED_AT DATE NOT NULL DEFAULT CURRENT_DATE,
	CONSTRAINT PK_CUSTOMER_ORDER_ID PRIMARY KEY (ID, CREATED_AT)
) PARTITION BY RANGE (CREATED_AT);

CREATE TABLE ORDER_2024 PARTITION OF CUSTOMER.ORDERS FOR VALUES FROM ('01-01-2024') TO ('31-12-2024');
CREATE TABLE ORDER_OTHERS PARTITION OF CUSTOMER.ORDERS DEFAULT;

CREATE FUNCTION CHECK_PRODUCT_ID_CUSTOMER_ID_EXISTED()
RETURNS TRIGGER AS $$
BEGIN
	IF EXISTS (
		SELECT ID FROM CUSTOMER.ORDERS WHERE CUSTOMER_ID = NEW.CUSTOMER_ID AND PRODUCT_ID = NEW.PRODUCT_ID
	) THEN RAISE EXCEPTION 'Product was existed with this customer!';
	END IF;
	RETURN NEW;
END;
$$LANGUAGE PLPGSQL;

CREATE TRIGGER CHECK_PRODUCT_ID_CUSTOMER_ID_EXISTED_TRIGGER
BEFORE INSERT ON CUSTOMER.ORDERS
FOR EACH ROW EXECUTE FUNCTION CHECK_PRODUCT_ID_CUSTOMER_ID_EXISTED();


SELECT * FROM CUSTOMER.ORDERS;
SELECT * FROM PRODUCT.CARS;
SELECT * FROM CUSTOMER.CUSTOMERS;
SELECT ID FROM PRODUCT.CARS WHERE ID = 1;

INSERT INTO CUSTOMER.ORDERS(CUSTOMER_ID, PRODUCT_ID, PAID) VALUES (1, 1, 200);

